plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
archivesBaseName = "TotemChanger-mc1.19"
group = "ru.pycat.totemchanger"
evaluationDependsOn(':shared')

repositories {
    maven { name = "Modrinth"
        url = "https://api.modrinth.com/maven" }

    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url "https://maven.shedaniel.me/" }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:1.19.2"
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_version}"
    mappings loom.officialMojangMappings()

    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:0.72.0+1.19.2"

    // ModMenu API
    modApi "com.terraformersmc:modmenu:4.1.2"

    // Cloth Config API
    modApi "me.shedaniel.cloth:cloth-config-fabric:8.2.88"

    // Mods
    modRuntimeOnly "maven.modrinth:smoothboot-fabric:1.19-1.7.1"
    modRuntimeOnly "maven.modrinth:lazydfu:0.1.3"
}

processResources {
    from project(":shared").sourceSets.main.resources
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }

    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
